{"version":3,"sources":["components/Gallery.tsx","components/ControlBar.tsx","components/ReactApp.tsx","hooks/useQueryParams.tsx","App.tsx","index.tsx"],"names":["ImgurPostType","SearchOptions","map","opt","key","value","text","Container","styled","div","paddingTop","paddingBottom","display","flexWrap","justifyContent","ControlBarDropdown","Dropdown","ControlBarInput","Input","width","marginRight","ControlBarButton","span","marginLeft","ButtonGroup","Button","Group","ControlBar","props","useState","isUser","setUser","searchText","setSearchText","count","setCount","dropDown","options","onChange","e","d","history","useHistory","label","n","i","color","onClick","push","isImagePost","url","includes","Post","isImgurPost","isImgurGallery","replace","sanitizeForImgur","PostDiv","Card","fluid","Content","textAlign","Header","title","href","redditLink","target","Icon","name","size","Image","src","extra","content","author","icon","labelPosition","ImgurPost","postType","ALBUM","GALLERY","IMAGE","React","images","setImages","useEffect","concat","galleryHash","split","pop","axios","get","headers","then","res","console","log","catch","albumHash","data","img","link","maxWidth","padding","alignItems","alignContent","Gallery","posts","post","permalink","ReactApp","query","URLSearchParams","useLocation","search","searchParams","p","useQueryParams","reddit","user","page","appData","setAppData","postCount","parseInt","isRedditSearch","response","children","child","filter","post_hint","err","App","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a43d0c67.chunk.js","sourcesContent":["import styled from '@emotion/styled'\nimport axios from 'axios'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {Image, Card, Icon, Button} from 'semantic-ui-react'\n\nexport interface GalleryProps {\n    posts : any[]\n}\n\nconst Gallery : React.FC<GalleryProps> = (props : GalleryProps) => {\n    return (\n        <Container>\n            {props.posts.map(post => <Post url={post.url}\n                                           title={post.title}\n                                           author={post.author}\n                                           redditLink={`https://reddit.com${post.permalink}`} />)}\n        </Container>\n    )\n}\n\nconst sanitizeForImgur = (url : string) => {   \n    if (url.includes(\"i.imgur.com\"))\n        return url\n    \n    if (url.includes(\"imgur.com\"))\n        return url.replace(\"imgur.com\", \"i.imgur.com\")\n    \n    return url\n}\n\nconst isImagePost = (url : string) => url.includes('jpg') || url.includes('jpeg') || url.includes('png')\nconst isImgurGallery = (url : string) => url.includes('imgur.com') && !isImagePost(url)\n\nconst Post = (props : {url : string, title : string, author : string, redditLink : string}) => {\n    const history = useHistory()\n    const onUserSearch = (author : string) => {\n        history.push(`/search?u=${author}`)\n    }\n    \n    const isImgurPost = isImgurGallery(props.url)\n    if (!isImgurPost && !isImagePost(props.url)) return null\n\n    const url = sanitizeForImgur(props.url)\n    return (\n        <PostDiv>\n            <Card fluid>\n                <Card.Content textAlign='center'>\n                    <Card.Header>\n                        {props.title}&nbsp;&nbsp;&nbsp;\n                        <a href={\"https://reddit.com\" + props.redditLink} target=\"_blank\" title='View On Reddit'>\n                            <Icon name='reddit' size='big' color='red'></Icon>\n                        </a>\n                    </Card.Header>\n                </Card.Content>\n                {isImgurPost ? \n                    <ImgurPost url={props.url} /> :\n                    <Image src={url} href={url} target=\"_blank\" />\n                }\n                <Card.Content textAlign='center' extra>\n                    <Card.Header title='View Posts By User'>\n                        <Button content={props.author}\n                                icon='history'\n                                color='teal'\n                                size='big' \n                                onClick={e => onUserSearch(props.author)}\n                                labelPosition='right' />\n                    </Card.Header>\n                </Card.Content>\n            </Card>\n        </PostDiv>\n    )\n}\n\nenum ImgurPostType {\n    IMAGE,\n    GALLERY,\n    ALBUM,\n}\n\nconst identifyPostType = (url : string) => {\n    if (url.includes('/a/')) return ImgurPostType.ALBUM\n    if (url.includes('/gallery/')) return ImgurPostType.GALLERY\n\n    return ImgurPostType.IMAGE\n}\n\nconst ImgurPost = (props : {url : string}) => {\n    const postType = identifyPostType(props.url)\n    const [images, setImages] = React.useState<Array<string>>([])\n    \n    React.useEffect(() => {\n        if (postType === ImgurPostType.IMAGE) {\n            setImages([props.url.concat('.jpg')])\n        }\n\n        if (postType === ImgurPostType.GALLERY) {\n            const galleryHash = props.url.split('/').pop()\n            axios.get(`https://api.imgur.com/3/gallery/album/${galleryHash}`, {\n                headers : {\n                    'Authorization' : 'Client-ID 7e1e88a33aed31d',\n                }\n            }).then(res => console.log(res))\n            .catch(e => console.log(e))\n        }\n\n        if (postType === ImgurPostType.ALBUM) {\n            const albumHash = props.url.split('/').pop()\n            axios.get(`https://api.imgur.com/3/album/${albumHash}/images`, {\n                headers : {\n                    'Authorization' : 'Client-ID 7e1e88a33aed31d',\n                }\n            }).then(res => res.data.data)\n            .then(images => setImages(images.map((img : any) => img.link)))\n            .catch(e => console.log(e))\n        }\n\n    }, [])\n    \n    return (\n        <div><h1>imgur post - <a href={props.url} target=\"_blank\">{props.url}</a></h1>\n            {images.map(img => <Image src={img} href={img} target=\"_blank\" />)}\n        </div>\n    )\n}\n\nconst PostDiv = styled.div({\n    maxWidth : 640,\n    padding : 20,\n})\n\nconst Container = styled.div({\n    display : 'flex',\n    flexWrap : 'wrap',\n    alignItems : 'flex-start',\n    alignContent : 'space-between',\n    justifyContent : 'center',\n})\n\nexport default Gallery","import styled from '@emotion/styled';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Button, Dropdown, Input } from 'semantic-ui-react'\n\nexport interface ControlBarProps {\n    isUser : boolean;\n    searchText : string;\n    count : number;\n}\n\nconst ControlBar : React.FC<ControlBarProps> = (props : ControlBarProps) => {\n    const [isUser, setUser] = useState(props.isUser)\n    const [searchText, setSearchText] = useState(props.searchText)\n    const [count, setCount] = useState(props.count)\n\n    const dropDown = <ControlBarDropdown \n                        options={SearchOptions}\n                        value={isUser ? '/u' : '/r'}\n                        onChange={(e, d) => setUser(d.value === '/u')}\n                    />\n\n    const history = useHistory()\n    const onSearch = () => {\n        history.push(`/search?${isUser? 'u' : 'r'}=${searchText}&n=${count}`)\n    }\n\n    return (\n        <Container>\n            <ControlBarInput\n                label={dropDown}\n                value={searchText}\n                onChange={(e, d) => setSearchText(d.value)}\n            />\n\n            <ButtonGroup>\n                {[10, 25, 50].map((n, i) => (\n                        <Button \n                            key={i}\n                            color={n === count ? 'teal' : 'grey'}\n                            onClick={() => setCount(n)}\n                        >\n                            {n}\n                        </Button>\n                    ))\n                }\n            </ButtonGroup>\n\n            <ControlBarButton>\n                <Button color={'teal'} onClick={onSearch}>Fetch Images</Button>\n            </ControlBarButton>\n        </Container>\n    )\n}\n\nconst SearchOptions = ['/r', '/u'].map(opt => ({\n    key : opt,\n    value : opt,\n    text : opt,\n}));\n\nconst Container = styled.div({\n    paddingTop : 50,\n    paddingBottom : 50,\n    display : 'flex',\n    flexWrap : 'wrap',\n    justifyContent : 'center'\n});\n\nconst ControlBarDropdown = styled(Dropdown)({\n});\n\nconst ControlBarInput = styled(Input)({\n    width: 400,\n    marginRight : 20,\n});\n\nconst ControlBarButton = styled.span({\n    marginLeft : 20,\n});\n\nconst ButtonGroup = styled(Button.Group)({\n});\n\nexport default ControlBar;\n","import React, {useState, useEffect} from 'react'\nimport { useQueryParams } from \"../hooks/useQueryParams\"\nimport ControlBar from \"./ControlBar\"\nimport styled from '@emotion/styled';\nimport axios from \"axios\";\nimport Gallery from './Gallery'\n\nexport const ReactApp = () => {\n    const [reddit, user, count] = useQueryParams('r', 'u', 'n')\n    const [appData, setAppData] = useState({\n        posts : [] as any,\n        page : 1\n    })\n\n    let postCount : number = 10;\n    if (count) postCount = parseInt(count)\n\n    console.log(reddit, user, postCount)\n\n    const isRedditSearch = (reddit !== null)\n\n    useEffect(() => {\n        if (isRedditSearch && reddit) {\n            axios.get(`https://www.reddit.com/r/${reddit}.json?limit=${postCount}`)\n                .then(response => response.data.data.children.map((child : any) => child.data))\n                .then(posts => {\n                    console.log(\"$$$$\", posts)\n                    return posts\n                })\n                .then(posts => posts.filter((post : any) => post.post_hint===\"image\" || post.post_hint===\"link\"))\n                .then(posts => setAppData({\n                    posts,\n                    page : 1,\n                }))\n                .catch(err => console.log(err))\n            \n        }\n\n    }, [reddit, user])\n\n    return (\n        <Container>\n            <ControlBar \n                isUser={!isRedditSearch}\n                searchText={reddit || \"\"}\n                count={postCount}\n            />\n            <Gallery posts={appData.posts} />\n        </Container>\n        \n    )\n}\n\nconst Container = styled.div({})","import { useLocation } from \"react-router-dom\";\n\nexport const useQueryParams = (...searchParams : string[]) => {\n  const query = new URLSearchParams(useLocation().search);\n  \n  return searchParams.map(p => query.get(p))\n}","import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { ReactApp } from './components/ReactApp';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/search'>\n            <ReactApp />\n        </Route>\n        <Route path='*'>\n          <Redirect to=\"/search?r=aww&n=20\" />\n        </Route>\n      </Switch>\n    </Router>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}